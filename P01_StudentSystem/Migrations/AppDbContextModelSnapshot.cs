// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

#nullable disable

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(80)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Description = "Basic Mathematics Course",
                            EndDate = new DateTime(2024, 10, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8938),
                            Name = "Mathematics",
                            Price = 1000.0,
                            StartDate = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8935)
                        },
                        new
                        {
                            CourseId = 2,
                            Description = "Basic Physics Course",
                            EndDate = new DateTime(2024, 10, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8945),
                            Name = "Physics",
                            Price = 1200.0,
                            StartDate = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8944)
                        },
                        new
                        {
                            CourseId = 3,
                            Description = "Basic Chemistry Course",
                            EndDate = new DateTime(2024, 10, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8949),
                            Name = "Chemistry",
                            Price = 1100.0,
                            StartDate = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8948)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeworkId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Contentype")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homeworks");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "Math Homework Content",
                            Contentype = 1,
                            CourseId = 2,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(9090)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "Physics Homework Content",
                            Contentype = 0,
                            CourseId = 3,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(9094)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "Chemistry Homework Content",
                            Contentype = 2,
                            CourseId = 1,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(9096)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 1,
                            Name = "Math Book",
                            ResourceType = 2,
                            Url = "http://mathbook.com"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 2,
                            Name = "Physics Video",
                            ResourceType = 0,
                            Url = "http://physicsvideo.com"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 3,
                            Name = "Chemistry Presentation",
                            ResourceType = 1,
                            Url = "http://chemistrypresentation.com"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "Omar",
                            PhoneNumber = "123456789",
                            RegisteredOn = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8740)
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "Fahed",
                            PhoneNumber = "124556789",
                            RegisteredOn = new DateTime(2024, 7, 15, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8795)
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Mostafa",
                            PhoneNumber = "123456319",
                            RegisteredOn = new DateTime(2024, 7, 10, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8798)
                        },
                        new
                        {
                            StudentId = 4,
                            Name = "Ashraf",
                            PhoneNumber = "123913789",
                            RegisteredOn = new DateTime(2024, 7, 12, 13, 0, 53, 896, DateTimeKind.Local).AddTicks(8802)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourse");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 3
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("Homeworks")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("Homeworks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Models.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P01_StudentSystem.Models.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Course", b =>
                {
                    b.Navigation("Homeworks");

                    b.Navigation("Resources");

                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("P01_StudentSystem.Models.Student", b =>
                {
                    b.Navigation("Homeworks");

                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
